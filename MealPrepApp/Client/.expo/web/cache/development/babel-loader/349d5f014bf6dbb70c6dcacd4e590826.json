{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/craigwilsonmusic/codeclan_work/projects/MealPrepAppV2/prep_app/MealPrepApp/Client/App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport MealAppService from \"./services/MealAppService\";\nimport MealPrepBox from \"./containers/MealPrepBox\";\nimport MyHeader from \"./components/MyHeader\";\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  useEffect(function () {\n    MealAppService.getFoodItem().then(function (items) {\n      return setItems(items);\n    });\n  }, []);\n  useEffect(function () {\n    console.log(\"list of items: \", items);\n  }, [items]);\n  var foodItems = items.map(function (item, key) {\n    return React.createElement(SafeAreaView, {\n      key: key,\n      style: styles.item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 12\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }\n    }, \" \", item.name, \" \"), React.createElement(TouchableWithoutFeedback, {\n      onPress: function onPress() {\n        return console.log(\"image tapped\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }\n    }, React.createElement(Image, {\n      source: {\n        width: '100%',\n        height: 150,\n        uri: item.imageUrl\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }\n    })));\n  });\n  return React.createElement(React.Fragment, null, React.createElement(SafeAreaView, {\n    style: {\n      backgroundColor: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 3\n    }\n  }, React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }), React.createElement(MealPrepBox, {\n    foodItems: foodItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  item: {\n    flex: 1,\n    width: '100%',\n    height: '20%',\n    fontWeight: 'bold',\n    alignSelf: 'stretch',\n    flexDirection: 'row',\n    margin: 10,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderBottomWidth: 1,\n    borderBottomColor: 'black'\n  }\n});","map":{"version":3,"sources":["/Users/craigwilsonmusic/codeclan_work/projects/MealPrepAppV2/prep_app/MealPrepApp/Client/App.js"],"names":["StatusBar","React","useState","useEffect","MealAppService","MealPrepBox","MyHeader","App","items","setItems","getFoodItem","then","console","log","foodItems","map","item","key","styles","name","width","height","uri","imageUrl","backgroundColor","StyleSheet","create","container","flex","alignItems","justifyContent","fontWeight","alignSelf","flexDirection","margin","borderBottomWidth","borderBottomColor"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;AAIA,OAAOC,cAAP;AACA,OAAOC,WAAP;AACA,OAAOC,QAAP;AAKA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAE5B,kBAA0BL,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOM,KAAP;AAAA,MAAcC,QAAd;;AAGAN,EAAAA,SAAS,CAAC,YAAM;AACdC,IAAAA,cAAc,CAACM,WAAf,GACKC,IADL,CACU,UAAAH,KAAK;AAAA,aAAIC,QAAQ,CAACD,KAAD,CAAZ;AAAA,KADf;AAED,GAHQ,EAGN,EAHM,CAAT;AAKAL,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BL,KAA/B;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAIA,MAAMM,SAAS,GAAGN,KAAK,CAACO,GAAN,CAAU,UAACC,IAAD,EAAOC,GAAP,EAAe;AACzC,WAAO,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAEA,GAAnB;AAAwB,MAAA,KAAK,EAAEC,MAAM,CAACF,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACP,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAQA,IAAI,CAACG,IAAb,MADO,EAEP,oBAAC,wBAAD;AAA0B,MAAA,OAAO,EAAE;AAAA,eAAMP,OAAO,CAACC,GAAR,CAAY,cAAZ,CAAN;AAAA,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE;AACbO,QAAAA,KAAK,EAAE,MADM;AAEbC,QAAAA,MAAM,EAAE,GAFK;AAGbC,QAAAA,GAAG,EAAEN,IAAI,CAACO;AAHG,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAFO,CAAP;AAWD,GAZiB,CAAlB;AAcA,SACE,0CACF,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAE;AAACC,MAAAA,eAAe,EAAE;AAAlB,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEV,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADE,CADF;AASD;AAED,IAAMI,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETJ,IAAAA,eAAe,EAAE,MAFR;AAGTK,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADoB;AAO/Bd,EAAAA,IAAI,EAAE;AACJY,IAAAA,IAAI,EAAE,CADF;AAEJR,IAAAA,KAAK,EAAE,MAFH;AAGJC,IAAAA,MAAM,EAAE,KAHJ;AAIJU,IAAAA,UAAU,EAAE,MAJR;AAKJC,IAAAA,SAAS,EAAE,SALP;AAMJC,IAAAA,aAAa,EAAE,KANX;AAOJC,IAAAA,MAAM,EAAE,EAPJ;AAQJL,IAAAA,UAAU,EAAE,QARR;AASJC,IAAAA,cAAc,EAAE,QATZ;AAUJK,IAAAA,iBAAiB,EAAE,CAVf;AAWJC,IAAAA,iBAAiB,EAAE;AAXf;AAPyB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport { StyleSheet, \n  Text, \n  SafeAreaView, ActivityIndicator, Image, TouchableWithoutFeedback } from 'react-native';\nimport MealAppService from './services/MealAppService';\nimport MealPrepBox from './containers/MealPrepBox';\nimport MyHeader from './components/MyHeader';\n// import { createStackNavigator } from '@react-navigator/stack';\n\n// const Stack = createStackNavigator();\n\nexport default function App() {\n\n  const [items, setItems] = useState([]);\n\n\n  useEffect(() => {\n    MealAppService.getFoodItem()\n        .then(items => setItems(items))\n  }, []);\n\n  useEffect(() => {\n    console.log(\"list of items: \", items);\n  }, [items])\n  \n  const foodItems = items.map((item, key) => {\n    return <SafeAreaView key={key} style={styles.item}>\n    <Text> {item.name} </Text>\n    <TouchableWithoutFeedback onPress={() => console.log(\"image tapped\")}>\n    <Image source={{\n      width: '100%', \n      height: 150,\n      uri: item.imageUrl\n      }} \n      />\n    </TouchableWithoutFeedback>\n    </SafeAreaView>\n  }) \n\n  return (\n    <>\n  <SafeAreaView style={{backgroundColor: \"white\"}}>\n    <StatusBar style=\"auto\" />\n    <MealPrepBox foodItems={foodItems}></MealPrepBox>\n  </SafeAreaView>\n\n    </>\n  );\n} \n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  item: {\n    flex: 1,\n    width: '100%',\n    height: '20%',\n    fontWeight: 'bold',\n    alignSelf: 'stretch',\n    flexDirection: 'row',\n    margin: 10,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderBottomWidth: 1, \n    borderBottomColor: 'black'\n  }\n});\n"]},"metadata":{},"sourceType":"module"}