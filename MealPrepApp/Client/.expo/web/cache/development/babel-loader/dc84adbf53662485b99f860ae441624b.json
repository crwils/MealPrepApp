{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/craigwilsonmusic/codeclan_work/projects/MealPrepAppV2/prep_app/MealPrepApp/Client/app/screens/Company.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { icons, images, SIZES, COLORS, FONTS } from \"../constants\";\nimport ShopServices from \"../../services/ShopServices\";\n\nfunction Company(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var scrollX = new Animated.Value(0);\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      company = _useState2[0],\n      setCompany = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      menu = _useState4[0],\n      setMenu = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      orderItems = _useState6[0],\n      setOrderItems = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      orderQuantity = _useState8[0],\n      setOrderQuantity = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      orderTotal = _useState10[0],\n      setOrderTotal = _useState10[1];\n\n  useEffect(function () {\n    var item = route.params.item;\n    setCompany(item);\n    ShopServices.getShopMenu(company == null ? void 0 : company.id).then(function (items) {\n      return setMenu(items);\n    });\n  });\n\n  function editOrder(action, selectedItem) {\n    var orderList = orderItems.slice();\n    var currentItem = orderList.filter(function (item) {\n      return item.menuId == selectedItem.id;\n    });\n\n    if (action == \"+\") {\n      if (currentItem.length > 0) {\n        var newQty = currentItem[0].qty + 1;\n        currentItem[0].qty = newQty;\n      } else {\n        var _currentItem = {\n          name: selectedItem,\n          menuId: selectedItem.id,\n          qty: 1\n        };\n        orderList.push(_currentItem);\n      }\n\n      setOrderItems(orderList);\n    } else {\n      if (currentItem.length > 0) {\n        var _currentItem$;\n\n        if (((_currentItem$ = currentItem[0]) == null ? void 0 : _currentItem$.qty) > 0) {\n          var _newQty = currentItem[0].qty - 1;\n\n          currentItem[0].qty = _newQty;\n        }\n      }\n\n      setOrderItems(orderList);\n    }\n  }\n\n  function getOrderQuantity(selectedItem) {\n    var orderItem = orderItems.filter(function (item) {\n      return item.menuId == selectedItem.id;\n    });\n\n    if (orderItem.length > 0) {\n      return orderItem[0].qty;\n    }\n\n    return 0;\n  }\n\n  function getOrderCount() {\n    var itemCount = orderItems.reduce(function (counter, item) {\n      return counter + (item.qty || 0);\n    }, 0);\n    return itemCount;\n  }\n\n  function getOrderTotal() {\n    var total = orderItems.reduce(function (counter, item) {\n      return counter + (item.name.price * item.qty || 0);\n    }, 0);\n    return total.toFixed(2);\n  }\n\n  function renderHeader() {\n    return React.createElement(View, {\n      style: {\n        flexDirection: 'row'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: {\n        width: 50,\n        paddingLeft: SIZES.padding * 2,\n        justifyContent: 'center'\n      },\n      onPress: function onPress() {\n        return navigation.navigate(\"Home\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, React.createElement(Image, {\n      source: icons.back,\n      resizeMode: \"contain\",\n      style: {\n        width: 30,\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    })), React.createElement(View, {\n      style: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: {\n        height: 50,\n        alignItems: 'center',\n        justifyContent: 'center',\n        paddingHorizontal: SIZES.padding * 3,\n        borderRadius: SIZES.radius,\n        borderWidth: 1,\n        borderColor: COLORS.lightGray1,\n        backgroundColor: COLORS.lightGray3\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: _objectSpread({}, FONTS.h3),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 25\n      }\n    }, company == null ? void 0 : company.name))), React.createElement(TouchableOpacity, {\n      style: {\n        width: 50,\n        paddingRight: SIZES.padding * 2,\n        justifyContent: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, React.createElement(Image, {\n      source: icons.list,\n      resizeMode: \"contain\",\n      style: {\n        width: 30,\n        height: 30,\n        tintColor: COLORS.lightGray2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }\n    })));\n  }\n\n  function renderFoodInfo() {\n    var _this = this;\n\n    return React.createElement(Animated.ScrollView, {\n      horizontal: true,\n      pagingEnabled: true,\n      scrollEventThrottle: 16,\n      snapToAlignment: \"center\",\n      showsHorizontalScrollIndicator: false,\n      onScroll: Animated.event([{\n        nativeEvent: {\n          contentOffset: {\n            x: scrollX\n          }\n        }\n      }], {\n        useNativeDriver: false\n      }),\n      style: {\n        paddingTop: 50\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, menu == null ? void 0 : menu.setMealList.map(function (selectedItem, index) {\n      return React.createElement(View, {\n        key: \"menu-\" + index,\n        style: {\n          alignItems: 'center'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: {\n          height: SIZES.height * 0.35\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 29\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: selectedItem.imageUrl\n        },\n        resizeMode: \"contain\",\n        style: {\n          width: SIZES.width,\n          height: \"100%\",\n          borderRadius: 20\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 33\n        }\n      }), React.createElement(View, {\n        style: {\n          position: 'absolute',\n          bottom: -20,\n          width: SIZES.width,\n          height: 50,\n          justifyContent: 'center',\n          flexDirection: 'row'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 33\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          width: 50,\n          backgroundColor: COLORS.white,\n          alignItems: 'center',\n          justifyContent: 'center',\n          borderTopLeftRadius: 25,\n          borderBottomLeftRadius: 25\n        },\n        onPress: function onPress() {\n          return editOrder(\"-\", selectedItem);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 37\n        }\n      }, React.createElement(Text, {\n        style: _objectSpread({}, FONTS.body1),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 41\n        }\n      }, \" - \")), React.createElement(View, {\n        style: {\n          width: 50,\n          backgroundColor: COLORS.white,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 37\n        }\n      }, React.createElement(Text, {\n        style: _objectSpread({}, FONTS.h2),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 43\n        }\n      }, getOrderQuantity(selectedItem))), React.createElement(TouchableOpacity, {\n        style: {\n          width: 50,\n          backgroundColor: COLORS.white,\n          alignItems: 'center',\n          justifyContent: 'center',\n          borderTopRightRadius: 25,\n          borderBottomRightRadius: 25\n        },\n        onPress: function onPress() {\n          return editOrder(\"+\", selectedItem);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 37\n        }\n      }, React.createElement(Text, {\n        style: _objectSpread({}, FONTS.body1),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 41\n        }\n      }, \" + \")))), React.createElement(View, {\n        style: {\n          width: SIZES.width,\n          alignItems: 'center',\n          marginTop: 15,\n          paddingHorizontal: SIZES.padding * 2\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: _objectSpread({\n          marginVertical: 10,\n          textAlign: 'center'\n        }, FONTS.h2),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 33\n        }\n      }, selectedItem.name), React.createElement(Text, {\n        style: _objectSpread(_objectSpread({}, FONTS.body3), {}, {\n          color: \"grey\"\n        }),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 33\n        }\n      }, selectedItem.description)), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          marginTop: 10\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 29\n        }\n      }, React.createElement(Image, {\n        source: icons.fire,\n        style: {\n          width: 20,\n          height: 20,\n          marginRight: 10\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 33\n        }\n      }), React.createElement(Text, {\n        style: _objectSpread(_objectSpread({}, FONTS.body3), {}, {\n          color: COLORS.darygray\n        }),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 33\n        }\n      }, selectedItem.calories, \" cal - P:\", selectedItem.protein, \" F:\", selectedItem.fats, \" C:\", selectedItem.carbs)));\n    }));\n  }\n\n  function renderOrder() {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: {\n        backgroundColor: COLORS.white,\n        borderTopLeftRadius: 40,\n        borderTopRightRadius: 40\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        paddingVertical: SIZES.padding * 2,\n        paddingHorizontal: SIZES.padding * 3,\n        borderBottomColor: COLORS.lightGray2,\n        borderBottomWidth: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: _objectSpread({}, FONTS.h3),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 25\n      }\n    }, \" \", getOrderCount(), \" items in Cart\"), React.createElement(Text, {\n      style: _objectSpread({}, FONTS.h3),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 25\n      }\n    }, \" \\xA3\", getOrderTotal())), React.createElement(View, {\n      style: {\n        padding: SIZES.padding * 2,\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 21\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: {\n        width: SIZES.width * 0.9,\n        padding: SIZES.padding,\n        backgroundColor: COLORS.primary,\n        alignItems: 'center',\n        borderRadius: SIZES.radius\n      },\n      onPress: function onPress() {\n        return navigation.navigate(\"Basket\", {\n          company: company,\n          orderItems: orderItems,\n          menu: menu,\n          total: {\n            getOrderTotal: getOrderTotal\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: _objectSpread({\n        color: COLORS.white\n      }, FONTS.h2),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 29\n      }\n    }, \"Order\")))));\n  }\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 9\n    }\n  }, renderHeader(), renderFoodInfo(), renderOrder());\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.lightGray2\n  }\n});\nexport default Company;","map":{"version":3,"sources":["/Users/craigwilsonmusic/codeclan_work/projects/MealPrepAppV2/prep_app/MealPrepApp/Client/app/screens/Company.js"],"names":["React","useEffect","useState","icons","images","SIZES","COLORS","FONTS","ShopServices","Company","route","navigation","scrollX","Animated","Value","company","setCompany","menu","setMenu","orderItems","setOrderItems","orderQuantity","setOrderQuantity","orderTotal","setOrderTotal","item","params","getShopMenu","id","then","items","editOrder","action","selectedItem","orderList","slice","currentItem","filter","menuId","length","newQty","qty","name","push","getOrderQuantity","orderItem","getOrderCount","itemCount","reduce","counter","getOrderTotal","total","price","toFixed","renderHeader","flexDirection","width","paddingLeft","padding","justifyContent","navigate","back","height","flex","alignItems","paddingHorizontal","borderRadius","radius","borderWidth","borderColor","lightGray1","backgroundColor","lightGray3","h3","paddingRight","list","tintColor","lightGray2","renderFoodInfo","event","nativeEvent","contentOffset","x","useNativeDriver","paddingTop","setMealList","map","index","uri","imageUrl","position","bottom","white","borderTopLeftRadius","borderBottomLeftRadius","body1","h2","borderTopRightRadius","borderBottomRightRadius","marginTop","marginVertical","textAlign","body3","color","description","fire","marginRight","darygray","calories","protein","fats","carbs","renderOrder","paddingVertical","borderBottomColor","borderBottomWidth","primary","styles","container","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport {\n    View, \n    Text,\n    SafeAreaView,\n    StyleSheet,\n    TouchableOpacity,\n    Image,\n    Animated\n} from \"react-native\";\n\nimport { icons, images, SIZES, COLORS, FONTS } from '../constants';\nimport ShopServices from '../../services/ShopServices';\n\nfunction Company({ route, navigation }) {\n    \n        const scrollX = new Animated.Value(0);\n        const [company, setCompany] = useState(null);\n        const [menu, setMenu] = useState(null);\n        // const [orderQuantity, setOrderQuantity] = useState(0);\n        // const [currentMenuId, setCurrentMenuId] = useState(null);\n        const [orderItems, setOrderItems] = useState([]);\n        const [orderQuantity, setOrderQuantity] = useState(0);\n        const [orderTotal, setOrderTotal] = useState(0);\n        \n        useEffect(() => {\n            // setCompany(null)\n            let {item} = route.params;\n            setCompany(item)\n            \n            ShopServices.getShopMenu(company?.id)\n            .then(items => setMenu(items))\n        })\n\n        // useEffect(() => {\n        //     orderTotal\n        // }, [getOrderQuantity])\n\n\n        function editOrder(action, selectedItem) {\n            \n            let orderList = orderItems.slice() \n            let currentItem = orderList.filter(item => item.menuId == selectedItem.id)\n\n            if (action == \"+\") {\n                if (currentItem.length > 0) {\n                    let newQty = currentItem[0].qty + 1\n                    currentItem[0].qty = newQty\n                } else {\n                    const currentItem = {\n                        name: selectedItem,\n                        menuId: selectedItem.id,\n                        qty: 1\n                    }\n                    orderList.push(currentItem)\n                }\n    \n                setOrderItems(orderList)\n            } else {\n                if (currentItem.length > 0) {\n                    if (currentItem[0]?.qty > 0) {\n                        let newQty = currentItem[0].qty - 1\n                        currentItem[0].qty = newQty\n                    }\n                }\n    \n                setOrderItems(orderList)\n            }\n            // console.log(orderList);\n        }\n            \n        function getOrderQuantity(selectedItem) {\n            let orderItem = orderItems.filter(item => item.menuId == selectedItem.id)\n\n            if (orderItem.length > 0) {\n                return orderItem[0].qty\n            }\n    \n            return 0\n        }\n\n        function getOrderCount() {\n            let itemCount = orderItems.reduce((counter, item) => counter + (item.qty || 0), 0)\n            return itemCount;\n        }\n\n        function getOrderTotal() {\n            let total = orderItems.reduce((counter, item) => counter + (item.name.price * item.qty || 0), 0)\n            // setOrderTotal(total);\n            return total.toFixed(2);\n        }\n\n    function renderHeader() {\n        return (\n            <View style={{ flexDirection: 'row' }}>\n                <TouchableOpacity\n                    style={{\n                        width: 50,\n                        paddingLeft: SIZES.padding * 2,\n                        justifyContent: 'center',\n                        // paddingBottom: 80\n                    }}\n                    onPress={() => navigation.navigate(\"Home\")}\n                    // onPress={() => this.props.navigation.push(\"Home\")}\n                >\n                    <Image\n                        source={icons.back}\n                        resizeMode=\"contain\"\n                        style={{\n                            width: 30,\n                            height: 30\n                        }}\n                    />\n                </TouchableOpacity>\n\n                {/* Restaurant Name Section */}\n                <View\n                    style={{\n                        flex: 1,\n                        alignItems: 'center',\n                        justifyContent: 'center'\n                    }}\n                >\n                    <View\n                        style={{\n                            height: 50,\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            paddingHorizontal: SIZES.padding * 3,\n                            borderRadius: SIZES.radius,\n                            borderWidth: 1,\n                            borderColor: COLORS.lightGray1,\n                            backgroundColor: COLORS.lightGray3\n                        }}\n                    >\n                        <Text style={{ ...FONTS.h3 }}>{company?.name}</Text>\n                    </View>\n                </View>\n\n                <TouchableOpacity\n                    style={{\n                        width: 50,\n                        paddingRight: SIZES.padding * 2,\n                        justifyContent: 'center'\n                    }}\n                >\n                    <Image\n                        source={icons.list}\n                        resizeMode=\"contain\"\n                        style={{\n                            width: 30,\n                            height: 30,\n                            tintColor: COLORS.lightGray2\n                        }}\n                    />\n                </TouchableOpacity>\n            </View>\n        )\n    }\n\n    function renderFoodInfo() {\n        \n        return (\n            <Animated.ScrollView\n                horizontal\n                pagingEnabled\n                scrollEventThrottle={16}\n                snapToAlignment=\"center\"\n                showsHorizontalScrollIndicator={false}\n                onScroll={Animated.event([\n                    { nativeEvent: { contentOffset: { x: scrollX } } }\n                ], { useNativeDriver: false })}\n                style={{\n                    paddingTop: 50\n                }}\n            >\n                {\n                    menu?.setMealList.map((selectedItem, index) => (\n                        <View\n                            key={`menu-${index}`}\n                            style={{ alignItems: 'center' }}\n                        >\n                            <View style={{ height: SIZES.height * 0.35 }}>\n                                {/* Food Image */}\n                                <Image\n                                    source={{uri: selectedItem.imageUrl}}\n                                    resizeMode=\"contain\"\n                                    style={{\n                                        width: SIZES.width,\n                                        height: \"100%\",\n                                        borderRadius:20\n                                    }}\n                                />\n\n                                {/* Quantity */}\n                                <View\n                                    style={{\n                                        position: 'absolute',\n                                        bottom: - 20,\n                                        width: SIZES.width,\n                                        height: 50,\n                                        justifyContent: 'center',\n                                        flexDirection: 'row'\n                                    }}\n                                >\n                                    <TouchableOpacity\n                                        style={{\n                                            width: 50,\n                                            backgroundColor: COLORS.white,\n                                            alignItems: 'center',\n                                            justifyContent: 'center',\n                                            borderTopLeftRadius: 25,\n                                            borderBottomLeftRadius: 25\n                                        }}\n                                        onPress={() => editOrder(\"-\", selectedItem)}\n                                    >\n                                        <Text style={{ ...FONTS.body1 }}> - </Text>\n                                    </TouchableOpacity>\n\n                                    <View\n                                        style={{\n                                            width: 50,\n                                            backgroundColor: COLORS.white,\n                                            alignItems: 'center',\n                                            justifyContent: 'center'\n                                        }}\n                                    >\n                                          <Text style={{ ...FONTS.h2 }}>{getOrderQuantity(selectedItem)}</Text>\n                                    </View>\n\n                                    <TouchableOpacity\n                                        style={{\n                                            width: 50,\n                                            backgroundColor: COLORS.white,\n                                            alignItems: 'center',\n                                            justifyContent: 'center',\n                                            borderTopRightRadius: 25,\n                                            borderBottomRightRadius: 25\n                                        }}\n                                        onPress={() => editOrder(\"+\", selectedItem)}\n                                    >\n                                        <Text style={{ ...FONTS.body1 }}> + </Text>\n                                    </TouchableOpacity>\n                                </View>\n                            </View>\n\n                            {/* Name & Description */}\n                            <View\n                                style={{\n                                    width: SIZES.width,\n                                    alignItems: 'center',\n                                    marginTop: 15,\n                                    paddingHorizontal: SIZES.padding * 2\n                                }}\n                            >\n                                <Text style={{ marginVertical: 10, textAlign: 'center', ...FONTS.h2 }}>{selectedItem.name}</Text>\n                                <Text style={{ ...FONTS.body3, color: \"grey\" }}>{selectedItem.description}</Text>\n                            </View>\n\n                            {/* Calories */}\n                            <View\n                                style={{\n                                    flexDirection: 'row',\n                                    marginTop: 10\n                                }}\n                            >\n                                <Image\n                                    source={icons.fire}\n                                    style={{\n                                        width: 20,\n                                        height: 20,\n                                        marginRight: 10\n                                    }}\n                                />\n\n                                <Text style={{\n                                    ...FONTS.body3, color: COLORS.darygray\n                                }}>{selectedItem.calories} cal - P:{selectedItem.protein} F:{selectedItem.fats} C:{selectedItem.carbs}</Text>\n                            </View>\n                        </View>\n                    ))\n                }\n            </Animated.ScrollView>\n        )\n    }\n\n    function renderOrder() {\n        return (\n            <View>\n                <View\n                    style={{\n                        backgroundColor: COLORS.white,\n                        borderTopLeftRadius: 40,\n                        borderTopRightRadius: 40\n                    }}\n                >\n                    <View\n                        style={{\n                            flexDirection: 'row',\n                            justifyContent: 'space-between',\n                            paddingVertical: SIZES.padding * 2,\n                            paddingHorizontal: SIZES.padding * 3,\n                            borderBottomColor: COLORS.lightGray2,\n                            borderBottomWidth: 1\n                        }}\n                    >\n                        <Text style={{ ...FONTS.h3 }}> {getOrderCount()} items in Cart</Text>\n                        <Text style={{ ...FONTS.h3 }}> £{getOrderTotal()}</Text>\n                    </View>\n                        {/* Order Button */}\n                    <View\n                        style={{\n                            padding: SIZES.padding * 2,\n                            alignItems: 'center',\n                            justifyContent: 'center'\n                        }}\n                    >\n                        <TouchableOpacity\n                            style={{\n                                width: SIZES.width * 0.9,\n                                padding: SIZES.padding,\n                                backgroundColor: COLORS.primary,\n                                alignItems: 'center',\n                                borderRadius: SIZES.radius\n                            }}\n                            onPress={() => navigation.navigate(\"Basket\", {\n                                company: company,\n                                orderItems: orderItems,\n                                menu: menu,\n                                total: {getOrderTotal}\n                            })}\n                        >\n                            <Text style={{ color: COLORS.white, ...FONTS.h2 }}>Order</Text>\n                        </TouchableOpacity>\n                    </View>\n \n                </View>\n\n\n            </View>\n        )\n    }\n\n    return (\n        <SafeAreaView style={styles.container}>\n            {renderHeader()}\n            {renderFoodInfo()}\n            {renderOrder()}\n        </SafeAreaView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n    flex: 1,\n    backgroundColor: COLORS.lightGray2,\n    }\n})\n\nexport default Company;"]},"metadata":{},"sourceType":"module"}