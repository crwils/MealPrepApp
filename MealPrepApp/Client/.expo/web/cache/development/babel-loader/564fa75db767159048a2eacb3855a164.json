{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/craigwilsonmusic/codeclan_work/projects/MealPrepAppV2/prep_app/MealPrepApp/Client/app/screens/Home.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport colors from \"../constants/colors\";\nimport MealAppService from \"../../services/MealAppService\";\nimport { icons, images, SIZES, COLORS, FONTS } from \"../constants\";\n\nvar Home = function Home() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  console.log(items);\n  useEffect(function () {\n    MealAppService.getFoodItem().then(function (items) {\n      return setItems(items);\n    });\n  }, []);\n\n  function renderCompaniesList() {\n    var _this2 = this;\n\n    var foodItems = items.map(function (item, key) {\n      return React.createElement(TouchableOpacity, {\n        style: {\n          marginBottom: SIZES.padding * 2\n        },\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          marginBottom: SIZES.padding\n        },\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: item.imageUrl\n        },\n        resizeMode: \"cover\",\n        style: {\n          width: \"100%\",\n          height: 200,\n          borderRadius: SIZES.radius\n        },\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }\n      }), React.createElement(View, {\n        style: _objectSpread({\n          position: 'absolute',\n          bottom: 0,\n          height: 50,\n          width: SIZES.width * 0.3,\n          backgroundColor: COLORS.white,\n          borderTopRightRadius: SIZES.radius,\n          borderBottomLeftRadius: SIZES.radius,\n          alignItems: 'center',\n          justifyContent: 'center'\n        }, styles.shadow),\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: _objectSpread({}, FONTS.h4),\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }\n      }, \"25-30\"))), React.createElement(Text, {\n        style: _objectSpread({}, FONTS.body2),\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }\n      }, item.name), React.createElement(View, {\n        style: {\n          marginTop: SIZES.padding,\n          flexDirection: 'row'\n        },\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }\n      })));\n    });\n  }\n\n  function renderHeader() {\n    return React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        height: 50\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: {\n        width: 50,\n        paddingLeft: SIZES.padding * 2,\n        justifyContent: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, React.createElement(Image, {\n      source: icons.logo_icon,\n      resizeMode: \"contain\",\n      style: {\n        width: 55,\n        height: 50\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    })), React.createElement(View, {\n      style: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: {\n        width: \"75%\",\n        height: \"100%\",\n        backgroundColor: COLORS.lightGray3,\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: SIZES.radius\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: _objectSpread(_objectSpread({}, FONTS.h3), {}, {\n        color: \"grey\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 29\n      }\n    }, \"Enter postcode...\"))), React.createElement(TouchableOpacity, {\n      style: {\n        width: 50,\n        paddingRight: SIZES.padding * 2,\n        justifyContent: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, React.createElement(Image, {\n      source: icons.settings,\n      resizeMode: \"contain\",\n      style: {\n        width: 35,\n        height: 35,\n        right: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    })));\n  }\n\n  function renderCompanyList() {\n    var _this3 = this;\n\n    var renderItem = function renderItem(_ref) {\n      var _selectedCategory;\n\n      var item = _ref.item;\n      return React.createElement(TouchableOpacity, {\n        style: _objectSpread({\n          padding: SIZES.padding,\n          paddingBottom: SIZES.padding * 2,\n          backgroundColor: COLORS.grassgreen,\n          borderRadius: SIZES.radius,\n          alignItems: 'center',\n          justifyContent: 'center',\n          marginRight: SIZES.padding\n        }, styles.shadow),\n        onPress: function onPress() {\n          return onSelectCategory(item);\n        },\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          width: 50,\n          height: 50,\n          borderRadius: 25,\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: ((_selectedCategory = selectedCategory) == null ? void 0 : _selectedCategory.id) == item.id ? COLORS.white : COLORS.lightGray\n        },\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        source: item.icon,\n        resizeMode: \"contain\",\n        style: {\n          width: 30,\n          height: 30\n        },\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }\n      })), React.createElement(Text, {\n        style: _objectSpread({\n          marginTop: SIZES.padding,\n          color: COLORS.white\n        }, FONTS.body5),\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }\n      }, item.name));\n    };\n\n    return React.createElement(View, {\n      style: {\n        padding: SIZES.padding * 2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: _objectSpread(_objectSpread({}, FONTS.h1), {}, {\n        fontWeight: \"800\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }, \"ORDER NOW\"), React.createElement(FlatList, {\n      horizontal: true,\n      showsHorizontalScrollIndicator: false,\n      keyExtractor: function keyExtractor(item) {\n        item.id;\n      },\n      renderItem: renderItem,\n      contentContainerStyle: {\n        paddingVertical: SIZES.padding\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }, renderHeader(), renderCompaniesList());\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.lightGray4\n  },\n  shadow: {\n    shadowColor: '#800',\n    shadowOffset: {\n      width: 0,\n      height: 3\n    }\n  }\n});\nexport default Home;","map":{"version":3,"sources":["/Users/craigwilsonmusic/codeclan_work/projects/MealPrepAppV2/prep_app/MealPrepApp/Client/app/screens/Home.js"],"names":["React","useState","useEffect","colors","MealAppService","icons","images","SIZES","COLORS","FONTS","Home","items","setItems","console","log","getFoodItem","then","renderCompaniesList","foodItems","map","item","key","marginBottom","padding","uri","imageUrl","width","height","borderRadius","radius","position","bottom","backgroundColor","white","borderTopRightRadius","borderBottomLeftRadius","alignItems","justifyContent","styles","shadow","h4","body2","name","marginTop","flexDirection","renderHeader","paddingLeft","logo_icon","flex","lightGray3","h3","color","paddingRight","settings","right","renderCompanyList","renderItem","paddingBottom","grassgreen","marginRight","onSelectCategory","selectedCategory","id","lightGray","icon","body5","h1","fontWeight","paddingVertical","container","StyleSheet","create","lightGray4","shadowColor","shadowOffset"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Text, View, StyleSheet, SafeAreaView, TouchableOpacity, FlatList, Image } from \"react-native\";\n\n\nimport colors from '../constants/colors';\nimport MealAppService from '../../services/MealAppService';\n\nimport { icons, images, SIZES, COLORS, FONTS } from '../constants';\n\nconst Home = () => {\n\n    const [items, setItems] = useState([]);\n    console.log(items);\n\n    useEffect(() => {\n        MealAppService.getFoodItem()\n            .then(items => setItems(items))\n    }, []);\n\n    function renderCompaniesList() {\n        const foodItems = items.map((item, key) => {\n            return (\n                <TouchableOpacity\n                    style={{ marginBottom: SIZES.padding *2}}\n                >\n                    {/* Image */}\n                    <View\n                        style={{\n                            marginBottom: SIZES.padding\n                        }}\n                    >\n                        <Image\n                            source={{uri: item.imageUrl}}\n                            resizeMode=\"cover\"\n                            style={{\n                                width: \"100%\",\n                                height: 200,\n                                borderRadius: SIZES.radius\n                            }}\n                        />\n\n                        <View\n                            style={{\n                                position: 'absolute',\n                                bottom: 0,\n                                height: 50,\n                                width: SIZES.width * 0.3,\n                                backgroundColor: COLORS.white,\n                                borderTopRightRadius: SIZES.radius,\n                                borderBottomLeftRadius: SIZES.radius,\n                                alignItems: 'center',\n                                justifyContent: 'center',\n                                ...styles.shadow\n                            }}\n                        >\n                            <Text style={{ ...FONTS.h4}}>25-30</Text>\n                        </View>\n                    </View>\n\n                    {/* Restaurant Info */}\n                    <Text style={{ ...FONTS.body2 }}>{item.name}</Text>\n                    \n                    <View\n                        style={{\n                            marginTop: SIZES.padding,\n                            flexDirection: 'row'\n                        }}\n                    >\n                        {/* Rating */}\n                        <Image />\n\n                    </View>\n\n                    \n                </TouchableOpacity>\n\n                // <View style={styles.companyListContainer}>\n                //     <View>\n                //         <Image style={styles.image} source={{uri: item.imageUrl}}/>\n                //         <Text> {item.name} </Text>\n                //     </View>\n                // </View>\n            )})\n    }\n\n    function renderHeader() {\n        return (\n            <View style={{ flexDirection: 'row', height: 50 }}>\n                <TouchableOpacity //LOGO\n                    style={{\n                        width: 50, \n                        paddingLeft: SIZES.padding *2,\n                        justifyContent: 'center'\n                    }}\n                >\n                    <Image\n                        source={icons.logo_icon}\n                        resizeMode=\"contain\"\n                        style={{\n                            width: 55,\n                            height: 50\n                        }}\n                    />\n                </TouchableOpacity>\n\n                <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n                        <View //POSTCODE ENTRY FIELD\n                            style={{\n                                width: \"75%\",\n                                height: \"100%\",\n                                backgroundColor: COLORS.lightGray3,\n                                alignItems: 'center',\n                                justifyContent: 'center',\n                                borderRadius: SIZES.radius\n                            }}\n                        >\n                            <Text style={{ ...FONTS.h3, color: \"grey\"}}>Enter postcode...</Text>\n                        </View>\n                </View>\n\n                <TouchableOpacity // SETTINGS COG ICON\n                    style={{\n                        width: 50,\n                        paddingRight: SIZES.padding *2,\n                        justifyContent: 'center'\n                    }}\n                    >\n                        <Image\n                            source={icons.settings}\n                            resizeMode=\"contain\"\n                            style={{\n                                width: 35, \n                                height: 35,\n                                right: 15,\n                            }}\n                        />\n                </TouchableOpacity>\n            </View>\n        )\n    }\n\n    function renderCompanyList() {\n\n        const renderItem = ({item}) => {\n            return (\n                <TouchableOpacity\n                    style={{\n                        padding: SIZES.padding,\n                        paddingBottom: SIZES.padding *2,\n                        backgroundColor: COLORS.grassgreen,\n                        borderRadius: SIZES.radius,\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        marginRight: SIZES.padding,\n                        ...styles.shadow\n                    }}\n                    onPress={() => onSelectCategory(item)}\n                >\n                    <View\n                        style={{\n                            width: 50, \n                            height: 50, \n                            borderRadius: 25,\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            backgroundColor: (selectedCategory?.id == item.id) ? COLORS.white : COLORS.lightGray\n                        }}\n                    >\n                        <Image \n                            source={item.icon}\n                            resizeMode='contain'\n                            style={{\n                                width: 30,\n                                height: 30\n                            }}\n                        />\n                    </View>\n\n                    <Text\n                        style={{\n                            marginTop: SIZES.padding,\n                            color: COLORS.white,\n                            ...FONTS.body5\n                        }}\n                    >\n                        {item.name}\n                    </Text>\n                </TouchableOpacity>\n            )\n        }\n        return (\n            <View style={{padding: SIZES.padding *2}}>\n                <Text style={{ ...FONTS.h1, fontWeight: \"800\" }}>ORDER NOW</Text>\n\n                <FlatList\n                    // data={categories}\n                    horizontal\n                    showsHorizontalScrollIndicator={false}\n                    keyExtractor={item => {item.id}}\n                    renderItem={renderItem}\n                    contentContainerStyle={{ paddingVertical: SIZES.padding }}\n                />\n            </View>\n        )\n    }\n\n    return (\n        <SafeAreaView style={styles.container}>\n            {renderHeader()}\n            {renderCompaniesList()}\n        </SafeAreaView>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: COLORS.lightGray4\n    },\n    shadow: {\n        shadowColor: '#800',\n        shadowOffset: {\n            width: 0,\n            height: 3,\n        }\n    }\n    \n})\n\n// function Home(props) {\n\n//     const [items, setItems] = useState([]);\n//     console.log(items);\n\n//     useEffect(() => {\n//         MealAppService.getFoodItem()\n//             .then(items => setItems(items))\n//     }, []);\n\n//     const foodItems = items.map((item, key) => {\n//         return (\n//             <View style={styles.companyListContainer}>\n//                 <View>\n//                     <Image style={styles.image} source={{uri: item.imageUrl}}/>\n//                     <Text> {item.name} </Text>\n//                 </View>\n//             </View>\n//         )}) \n//         console.log(foodItems[0]);\n\n\n//     return (\n//         <View>\n//             <View style={styles.background}>\n//                 <View style={styles.header}/>\n//                 <View style={styles.logoContainer}>\n//                     <Image style={styles.logo} source={require(\"../assets/images/logo2.png\")}/>\n//                 </View>\n//             </View>\n//             <View>{foodItems}</View>\n//         </View>\n//     );\n// }\n\n\n// const styles = StyleSheet.create({\n//     background: {\n//         flex: 1, // sets the image background to entire screen\n//         // justifyContent: \"space-between\",\n//         alignItems: \"center\"\n//     },\n//     header: {\n//         width: \"100%\", \n//         height: 135,\n//         backgroundColor: colors.black,\n//         alignItems: \"flex-start\", \n//     },\n//     postcodeField: {\n//         backgroundColor: colors.white,\n//         width: \"80%\", \n//         height: 100,\n//         borderRadius: 30\n//     },\n//     logoContainer: {\n//         position: \"absolute\",\n//         top: 20, \n//         flexDirection: \"row\"\n//     },\n//     logo: {\n//         width: 480, \n//         height: 100,\n//         alignItems: \"center\"\n//     },\n//     logoText: {\n//         color: \"white\",\n//         fontSize: 40\n//     },\n//     footer: {\n//         width: \"100%\", \n//         height: 90,\n//         backgroundColor: colors.grassgreen\n//     },\n//     companyListContainer: {\n        \n//     },\n//     image: {\n//         width: '90%', \n//         height: 250,\n//     }\n\n// });\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}