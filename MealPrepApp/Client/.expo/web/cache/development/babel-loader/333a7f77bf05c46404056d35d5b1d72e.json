{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/craigwilsonmusic/codeclan_work/projects/MealPrepAppV2/prep_app/MealPrepApp/Client/app/screens/ViewCompaniesScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport colors from \"../config/colors\";\nimport MealAppService from \"../../services/MealAppService\";\n\nfunction ViewCompaniesScreen(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  console.log(items);\n  useEffect(function () {\n    MealAppService.getFoodItem().then(function (items) {\n      return setItems(items);\n    });\n  }, []);\n  var foodItems = items.map(function (item, key) {\n    return React.createElement(SafeAreaView, {\n      key: key,\n      style: styles.item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 12\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }\n    }, \" \", item.name, \" \"), React.createElement(TouchableWithoutFeedback, {\n      onPress: function onPress() {\n        return console.log(\"image tapped\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }\n    }, React.createElement(Image, {\n      source: {\n        width: '100%',\n        height: 150,\n        uri: item.imageUrl\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }\n    })));\n  });\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.background,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles.logoContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    style: styles.logo,\n    source: require(\"../assets/images/logo2.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }))));\n}\n\nvar styles = StyleSheet.create({\n  background: {\n    flex: 1,\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  header: {\n    width: \"100%\",\n    height: 135,\n    backgroundColor: colors.black,\n    alignItems: \"flex-start\"\n  },\n  postcodeField: {\n    backgroundColor: colors.white,\n    width: \"80%\",\n    height: 100,\n    borderRadius: 30\n  },\n  logoContainer: {\n    position: \"absolute\",\n    top: 20,\n    flexDirection: \"row\"\n  },\n  logo: {\n    width: 480,\n    height: 100,\n    alignItems: \"center\"\n  },\n  logoText: {\n    color: \"white\",\n    fontSize: 40\n  },\n  footer: {\n    width: \"100%\",\n    height: 90,\n    backgroundColor: colors.grassgreen\n  }\n});\nexport default ViewCompaniesScreen;","map":{"version":3,"sources":["/Users/craigwilsonmusic/codeclan_work/projects/MealPrepAppV2/prep_app/MealPrepApp/Client/app/screens/ViewCompaniesScreen.js"],"names":["React","useState","useEffect","colors","MealAppService","ViewCompaniesScreen","props","items","setItems","console","log","getFoodItem","then","foodItems","map","item","key","styles","name","width","height","uri","imageUrl","background","header","logoContainer","logo","require","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","black","postcodeField","white","borderRadius","position","top","flexDirection","logoText","color","fontSize","footer","grassgreen"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;;AAGA,OAAOC,MAAP;AACA,OAAOC,cAAP;;AAGA,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA;;AAEhC,kBAA0BL,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOM,KAAP;AAAA,MAAcC,QAAd;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAEAL,EAAAA,SAAS,CAAC,YAAM;AACZE,IAAAA,cAAc,CAACO,WAAf,GACKC,IADL,CACU,UAAAL,KAAK;AAAA,aAAIC,QAAQ,CAACD,KAAD,CAAZ;AAAA,KADf;AAEH,GAHQ,EAGN,EAHM,CAAT;AAKA,MAAMM,SAAS,GAAGN,KAAK,CAACO,GAAN,CAAU,UAACC,IAAD,EAAOC,GAAP,EAAe;AAC3C,WAAO,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAEA,GAAnB;AAAwB,MAAA,KAAK,EAAEC,MAAM,CAACF,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACP,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAQA,IAAI,CAACG,IAAb,MADO,EAEP,oBAAC,wBAAD;AAA0B,MAAA,OAAO,EAAE;AAAA,eAAMT,OAAO,CAACC,GAAR,CAAY,cAAZ,CAAN;AAAA,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE;AACbS,QAAAA,KAAK,EAAE,MADM;AAEbC,QAAAA,MAAM,EAAE,GAFK;AAGbC,QAAAA,GAAG,EAAEN,IAAI,CAACO;AAHG,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAFO,CAAP;AAWD,GAZmB,CAAlB;AAeA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACM,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACO,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,MAAM,CAACQ,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAER,MAAM,CAACS,IAArB;AAA2B,IAAA,MAAM,EAAEC,OAAO,8BAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CADJ,CADJ;AAcH;;AAGD,IAAMV,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC7BN,EAAAA,UAAU,EAAE;AACRO,IAAAA,IAAI,EAAE,CADE;AAERC,IAAAA,cAAc,EAAE,eAFR;AAGRC,IAAAA,UAAU,EAAE;AAHJ,GADiB;AAM7BR,EAAAA,MAAM,EAAE;AACJL,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,MAAM,EAAE,GAFJ;AAGJa,IAAAA,eAAe,EAAE9B,MAAM,CAAC+B,KAHpB;AAIJF,IAAAA,UAAU,EAAE;AAJR,GANqB;AAY7BG,EAAAA,aAAa,EAAE;AACXF,IAAAA,eAAe,EAAE9B,MAAM,CAACiC,KADb;AAEXjB,IAAAA,KAAK,EAAE,KAFI;AAGXC,IAAAA,MAAM,EAAE,GAHG;AAIXiB,IAAAA,YAAY,EAAE;AAJH,GAZc;AAkB7BZ,EAAAA,aAAa,EAAE;AACXa,IAAAA,QAAQ,EAAE,UADC;AAEXC,IAAAA,GAAG,EAAE,EAFM;AAGXC,IAAAA,aAAa,EAAE;AAHJ,GAlBc;AAuB7Bd,EAAAA,IAAI,EAAE;AACFP,IAAAA,KAAK,EAAE,GADL;AAEFC,IAAAA,MAAM,EAAE,GAFN;AAGFY,IAAAA,UAAU,EAAE;AAHV,GAvBuB;AA4B7BS,EAAAA,QAAQ,EAAE;AACNC,IAAAA,KAAK,EAAE,OADD;AAENC,IAAAA,QAAQ,EAAE;AAFJ,GA5BmB;AAgC7BC,EAAAA,MAAM,EAAE;AACJzB,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,MAAM,EAAE,EAFJ;AAGJa,IAAAA,eAAe,EAAE9B,MAAM,CAAC0C;AAHpB;AAhCqB,CAAlB,CAAf;AAwCA,eAAexC,mBAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { ImageBackground, View, StyleSheet, Image } from \"react-native\";\n\nimport colors from '../config/colors';\nimport MealAppService from '../../services/MealAppService';\n\n\nfunction ViewCompaniesScreen(props) {\n\n    const [items, setItems] = useState([]);\n    console.log(items);\n\n    useEffect(() => {\n        MealAppService.getFoodItem()\n            .then(items => setItems(items))\n    }, []);\n\n    const foodItems = items.map((item, key) => {\n    return <SafeAreaView key={key} style={styles.item}>\n    <Text> {item.name} </Text>\n    <TouchableWithoutFeedback onPress={() => console.log(\"image tapped\")}>\n    <Image source={{\n      width: '100%', \n      height: 150,\n      uri: item.imageUrl\n      }} \n      />\n    </TouchableWithoutFeedback>\n    </SafeAreaView>\n  }) \n\n\n    return (\n        <View>\n            <View style={styles.background}>\n                <View style={styles.header}/>\n                <View style={styles.logoContainer}>\n                    <Image style={styles.logo} source={require(\"../assets/images/logo2.png\")}/>\n                </View>\n            </View>\n            {/* <View>\n                {item.name}\n            </View> */}\n\n        </View>\n    );\n}\n\n\nconst styles = StyleSheet.create({\n    background: {\n        flex: 1, // sets the image background to entire screen\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n    },\n    header: {\n        width: \"100%\", \n        height: 135,\n        backgroundColor: colors.black,\n        alignItems: \"flex-start\", \n    },\n    postcodeField: {\n        backgroundColor: colors.white,\n        width: \"80%\", \n        height: 100,\n        borderRadius: 30\n    },\n    logoContainer: {\n        position: \"absolute\",\n        top: 20, \n        flexDirection: \"row\"\n    },\n    logo: {\n        width: 480, \n        height: 100,\n        alignItems: \"center\"\n    },\n    logoText: {\n        color: \"white\",\n        fontSize: 40\n    },\n    footer: {\n        width: \"100%\", \n        height: 90,\n        backgroundColor: colors.grassgreen\n    }\n\n})\n\nexport default ViewCompaniesScreen;"]},"metadata":{},"sourceType":"module"}