{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/craigwilsonmusic/codeclan_work/projects/MealPrepAppV2/prep_app/MealPrepApp/Client/app/screens/Company.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { icons, images, SIZES, COLORS, FONTS } from \"../constants\";\nimport ShopServices from \"../../services/ShopServices\";\n\nfunction Company(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      company = _useState2[0],\n      setCompany = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      menu = _useState4[0],\n      setMenu = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      orderQuantity = _useState6[0],\n      setOrderQuantity = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      currentMenuId = _useState8[0],\n      setCurrentMenuId = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      orderList = _useState10[0],\n      setOrderList = _useState10[1];\n\n  useEffect(function () {\n    var item = route.params.item;\n    setCompany(item);\n    ShopServices.getShopMenu(company == null ? void 0 : company.id).then(function (items) {\n      return setMenu(items);\n    });\n  }, [company]);\n  useEffect(function () {\n    orderQuantity;\n  }, [getOrderQuantity]);\n\n  function editOrder(action, itemId) {\n    var orderList = orderItems.slice();\n    var item = orderList.filter(function (a) {\n      return a.id == itemId;\n    });\n\n    if (action == \"+\") {\n      if (item.hasOwnProperty('quantity')) {\n        var newQty = item[0].qty + 1;\n        item[0].qty = newQty;\n      } else {\n        item.quantity = 0;\n      }\n\n      setOrderQuantity(item.quantity);\n    } else {\n      if (orderQuantity > 0) {\n        setOrderQuantity(item.quantity);\n\n        if (item.hasOwnProperty('quantity')) {\n          item.quantity -= 1;\n        } else {\n          item.quantity = 0;\n        }\n      }\n    }\n  }\n\n  function getOrderQuantity() {\n    console.log('swiped');\n    return 0;\n  }\n\n  function renderHeader() {\n    return React.createElement(View, {\n      style: {\n        flexDirection: 'row'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: {\n        width: 50,\n        paddingLeft: SIZES.padding * 2,\n        justifyContent: 'center'\n      },\n      onPress: function onPress() {\n        return navigation.goBack();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, React.createElement(Image, {\n      source: icons.back,\n      resizeMode: \"contain\",\n      style: {\n        width: 30,\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    })), React.createElement(View, {\n      style: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: {\n        height: 50,\n        alignItems: 'center',\n        justifyContent: 'center',\n        paddingHorizontal: SIZES.padding * 3,\n        borderRadius: SIZES.radius,\n        borderWidth: 1,\n        borderColor: COLORS.lightGray1,\n        backgroundColor: COLORS.lightGray3\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: _objectSpread({}, FONTS.h3),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }\n    }, company == null ? void 0 : company.name))), React.createElement(TouchableOpacity, {\n      style: {\n        width: 50,\n        paddingRight: SIZES.padding * 2,\n        justifyContent: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, React.createElement(Image, {\n      source: icons.list,\n      resizeMode: \"contain\",\n      style: {\n        width: 30,\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    })));\n  }\n\n  function renderFoodInfo() {\n    var _this = this;\n\n    return React.createElement(Animated.ScrollView, {\n      horizontal: true,\n      pagingEnabled: true,\n      scrollEventThrottle: 16,\n      snapToAlignment: \"center\",\n      showsHorizontalScrollIndicator: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, menu == null ? void 0 : menu.setMealList.map(function (item, index) {\n      return React.createElement(View, {\n        key: \"menu-\" + index,\n        style: {\n          alignItems: 'center'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: {\n          height: SIZES.height * 0.35\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 29\n        }\n      }, React.createElement(Image, {\n        source: item.imageUrl,\n        resizeMode: \"contain\",\n        style: {\n          width: SIZES.width,\n          height: \"100%\",\n          borderRadius: 20\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 33\n        }\n      }), React.createElement(View, {\n        style: {\n          position: 'absolute',\n          bottom: -20,\n          width: SIZES.width,\n          height: 50,\n          justifyContent: 'center',\n          flexDirection: 'row'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 33\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          width: 50,\n          backgroundColor: COLORS.white,\n          alignItems: 'center',\n          justifyContent: 'center',\n          borderTopLeftRadius: 25,\n          borderBottomLeftRadius: 25\n        },\n        onPress: function onPress() {\n          return editOrder(\"-\", item.id);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 37\n        }\n      }, React.createElement(Text, {\n        style: _objectSpread({}, FONTS.body1),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 41\n        }\n      }, \" - \")), React.createElement(View, {\n        style: {\n          width: 50,\n          backgroundColor: COLORS.white,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 37\n        }\n      }, React.createElement(Text, {\n        style: _objectSpread({}, FONTS.h2),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 43\n        }\n      }, getOrderQuantity())), React.createElement(TouchableOpacity, {\n        style: {\n          width: 50,\n          backgroundColor: COLORS.white,\n          alignItems: 'center',\n          justifyContent: 'center',\n          borderTopRightRadius: 25,\n          borderBottomRightRadius: 25\n        },\n        onPress: function onPress() {\n          return editOrder(\"+\", item.id);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 37\n        }\n      }, React.createElement(Text, {\n        style: _objectSpread({}, FONTS.body1),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 41\n        }\n      }, \" + \")))), React.createElement(View, {\n        style: {\n          width: SIZES.width,\n          alignItems: 'center',\n          marginTop: 15,\n          paddingHorizontal: SIZES.padding * 2\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: _objectSpread({\n          marginVertical: 10,\n          textAlign: 'center'\n        }, FONTS.h2),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 33\n        }\n      }, item.name), React.createElement(Text, {\n        style: _objectSpread({}, FONTS.body3),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 33\n        }\n      }, item.description)), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          marginTop: 10\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 29\n        }\n      }, React.createElement(Image, {\n        source: icons.fire,\n        style: {\n          width: 20,\n          height: 20,\n          marginRight: 10\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 33\n        }\n      }), React.createElement(Text, {\n        style: _objectSpread(_objectSpread({}, FONTS.body3), {}, {\n          color: COLORS.darygray\n        }),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 33\n        }\n      }, item.calories, \" cal - P:\", item.protein, \" F:\", item.fats, \" C:\", item.carbs)));\n    }));\n  }\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }\n  }, renderHeader(), renderFoodInfo());\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.lightGray2\n  }\n});\nexport default Company;","map":{"version":3,"sources":["/Users/craigwilsonmusic/codeclan_work/projects/MealPrepAppV2/prep_app/MealPrepApp/Client/app/screens/Company.js"],"names":["React","useEffect","useState","icons","images","SIZES","COLORS","FONTS","ShopServices","Company","route","navigation","company","setCompany","menu","setMenu","orderQuantity","setOrderQuantity","currentMenuId","setCurrentMenuId","orderList","setOrderList","item","params","getShopMenu","id","then","items","getOrderQuantity","editOrder","action","itemId","orderItems","slice","filter","a","hasOwnProperty","newQty","qty","quantity","console","log","renderHeader","flexDirection","width","paddingLeft","padding","justifyContent","goBack","back","height","flex","alignItems","paddingHorizontal","borderRadius","radius","borderWidth","borderColor","lightGray1","backgroundColor","lightGray3","h3","name","paddingRight","list","renderFoodInfo","setMealList","map","index","imageUrl","position","bottom","white","borderTopLeftRadius","borderBottomLeftRadius","body1","h2","borderTopRightRadius","borderBottomRightRadius","marginTop","marginVertical","textAlign","body3","description","fire","marginRight","color","darygray","calories","protein","fats","carbs","styles","container","StyleSheet","create","lightGray2"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;;AAYA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,KAAxB,EAA+BC,MAA/B,EAAuCC,KAAvC;AACA,OAAOC,YAAP;;AAEA,SAASC,OAAT,OAAwC;AAAA,MAArBC,KAAqB,QAArBA,KAAqB;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAGhC,kBAA8BT,QAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAOU,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAAwBX,QAAQ,CAAC,IAAD,CAAhC;AAAA;AAAA,MAAOY,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAA0Cb,QAAQ,CAAC,CAAD,CAAlD;AAAA;AAAA,MAAOc,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,mBAA0Cf,QAAQ,CAAC,IAAD,CAAlD;AAAA;AAAA,MAAOgB,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,mBAAkCjB,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAOkB,SAAP;AAAA,MAAkBC,YAAlB;;AAEApB,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAKqB,IAAL,GAAaZ,KAAK,CAACa,MAAnB,CAAKD,IAAL;AACAT,IAAAA,UAAU,CAACS,IAAD,CAAV;AACAd,IAAAA,YAAY,CAACgB,WAAb,CAAyBZ,OAAzB,oBAAyBA,OAAO,CAAEa,EAAlC,EACCC,IADD,CACM,UAAAC,KAAK;AAAA,aAAIZ,OAAO,CAACY,KAAD,CAAX;AAAA,KADX;AAEH,GALQ,EAKN,CAACf,OAAD,CALM,CAAT;AAOAX,EAAAA,SAAS,CAAC,YAAM;AACZe,IAAAA,aAAa;AAChB,GAFQ,EAEN,CAACY,gBAAD,CAFM,CAAT;;AASA,WAASC,SAAT,CAAmBC,MAAnB,EAA2BC,MAA3B,EAAmC;AAE/B,QAAIX,SAAS,GAAGY,UAAU,CAACC,KAAX,EAAhB;AACA,QAAIX,IAAI,GAAGF,SAAS,CAACc,MAAV,CAAiB,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACV,EAAF,IAAQM,MAAZ;AAAA,KAAlB,CAAX;;AAEA,QAAID,MAAM,IAAI,GAAd,EAAmB;AACf,UAAIR,IAAI,CAACc,cAAL,CAAoB,UAApB,CAAJ,EAAqC;AACjC,YAAIC,MAAM,GAAGf,IAAI,CAAC,CAAD,CAAJ,CAAQgB,GAAR,GAAa,CAA1B;AACAhB,QAAAA,IAAI,CAAC,CAAD,CAAJ,CAAQgB,GAAR,GAAcD,MAAd;AAEH,OAJD,MAIO;AAAEf,QAAAA,IAAI,CAACiB,QAAL,GAAgB,CAAhB;AAAkB;;AAC3BtB,MAAAA,gBAAgB,CAACK,IAAI,CAACiB,QAAN,CAAhB;AAGH,KATD,MASO;AACH,UAAIvB,aAAa,GAAG,CAApB,EAAuB;AACnBC,QAAAA,gBAAgB,CAACK,IAAI,CAACiB,QAAN,CAAhB;;AACA,YAAIjB,IAAI,CAACc,cAAL,CAAoB,UAApB,CAAJ,EAAqC;AACjCd,UAAAA,IAAI,CAACiB,QAAL,IAAiB,CAAjB;AACH,SAFD,MAGK;AAAEjB,UAAAA,IAAI,CAACiB,QAAL,GAAgB,CAAhB;AAAkB;AAC5B;AACJ;AAGJ;;AAED,WAASX,gBAAT,GAA4B;AACxBY,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAIA,WAAO,CAAP;AACH;;AAEL,WAASC,YAAT,GAAwB;AACpB,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,aAAa,EAAE;AAAjB,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,gBAAD;AACI,MAAA,KAAK,EAAE;AACHC,QAAAA,KAAK,EAAE,EADJ;AAEHC,QAAAA,WAAW,EAAExC,KAAK,CAACyC,OAAN,GAAgB,CAF1B;AAGHC,QAAAA,cAAc,EAAE;AAHb,OADX;AAMI,MAAA,OAAO,EAAE;AAAA,eAAMpC,UAAU,CAACqC,MAAX,EAAN;AAAA,OANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQI,oBAAC,KAAD;AACI,MAAA,MAAM,EAAE7C,KAAK,CAAC8C,IADlB;AAEI,MAAA,UAAU,EAAC,SAFf;AAGI,MAAA,KAAK,EAAE;AACHL,QAAAA,KAAK,EAAE,EADJ;AAEHM,QAAAA,MAAM,EAAE;AAFL,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CADJ,EAoBI,oBAAC,IAAD;AACI,MAAA,KAAK,EAAE;AACHC,QAAAA,IAAI,EAAE,CADH;AAEHC,QAAAA,UAAU,EAAE,QAFT;AAGHL,QAAAA,cAAc,EAAE;AAHb,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOI,oBAAC,IAAD;AACI,MAAA,KAAK,EAAE;AACHG,QAAAA,MAAM,EAAE,EADL;AAEHE,QAAAA,UAAU,EAAE,QAFT;AAGHL,QAAAA,cAAc,EAAE,QAHb;AAIHM,QAAAA,iBAAiB,EAAEhD,KAAK,CAACyC,OAAN,GAAgB,CAJhC;AAKHQ,QAAAA,YAAY,EAAEjD,KAAK,CAACkD,MALjB;AAMHC,QAAAA,WAAW,EAAE,CANV;AAOHC,QAAAA,WAAW,EAAEnD,MAAM,CAACoD,UAPjB;AAQHC,QAAAA,eAAe,EAAErD,MAAM,CAACsD;AARrB,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYI,oBAAC,IAAD;AAAM,MAAA,KAAK,oBAAOrD,KAAK,CAACsD,EAAb,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BjD,OAA/B,oBAA+BA,OAAO,CAAEkD,IAAxC,CAZJ,CAPJ,CApBJ,EA2CI,oBAAC,gBAAD;AACI,MAAA,KAAK,EAAE;AACHlB,QAAAA,KAAK,EAAE,EADJ;AAEHmB,QAAAA,YAAY,EAAE1D,KAAK,CAACyC,OAAN,GAAgB,CAF3B;AAGHC,QAAAA,cAAc,EAAE;AAHb,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOI,oBAAC,KAAD;AACI,MAAA,MAAM,EAAE5C,KAAK,CAAC6D,IADlB;AAEI,MAAA,UAAU,EAAC,SAFf;AAGI,MAAA,KAAK,EAAE;AACHpB,QAAAA,KAAK,EAAE,EADJ;AAEHM,QAAAA,MAAM,EAAE;AAFL,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CA3CJ,CADJ;AA8DH;;AAED,WAASe,cAAT,GAA0B;AAAA;;AAEtB,WACI,oBAAC,QAAD,CAAU,UAAV;AACI,MAAA,UAAU,MADd;AAEI,MAAA,aAAa,MAFjB;AAGI,MAAA,mBAAmB,EAAE,EAHzB;AAII,MAAA,eAAe,EAAC,QAJpB;AAKI,MAAA,8BAA8B,EAAE,KALpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWQnD,IAXR,oBAWQA,IAAI,CAAEoD,WAAN,CAAkBC,GAAlB,CAAsB,UAAC7C,IAAD,EAAO8C,KAAP;AAAA,aAClB,oBAAC,IAAD;AACI,QAAA,GAAG,YAAUA,KADjB;AAEI,QAAA,KAAK,EAAE;AAAEhB,UAAAA,UAAU,EAAE;AAAd,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEF,UAAAA,MAAM,EAAE7C,KAAK,CAAC6C,MAAN,GAAe;AAAzB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,KAAD;AACI,QAAA,MAAM,EAAE5B,IAAI,CAAC+C,QADjB;AAEI,QAAA,UAAU,EAAC,SAFf;AAGI,QAAA,KAAK,EAAE;AACHzB,UAAAA,KAAK,EAAEvC,KAAK,CAACuC,KADV;AAEHM,UAAAA,MAAM,EAAE,MAFL;AAGHI,UAAAA,YAAY,EAAC;AAHV,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAaI,oBAAC,IAAD;AACI,QAAA,KAAK,EAAE;AACHgB,UAAAA,QAAQ,EAAE,UADP;AAEHC,UAAAA,MAAM,EAAE,CAAE,EAFP;AAGH3B,UAAAA,KAAK,EAAEvC,KAAK,CAACuC,KAHV;AAIHM,UAAAA,MAAM,EAAE,EAJL;AAKHH,UAAAA,cAAc,EAAE,QALb;AAMHJ,UAAAA,aAAa,EAAE;AANZ,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUI,oBAAC,gBAAD;AACI,QAAA,KAAK,EAAE;AACHC,UAAAA,KAAK,EAAE,EADJ;AAEHe,UAAAA,eAAe,EAAErD,MAAM,CAACkE,KAFrB;AAGHpB,UAAAA,UAAU,EAAE,QAHT;AAIHL,UAAAA,cAAc,EAAE,QAJb;AAKH0B,UAAAA,mBAAmB,EAAE,EALlB;AAMHC,UAAAA,sBAAsB,EAAE;AANrB,SADX;AASI,QAAA,OAAO,EAAE;AAAA,iBAAM7C,SAAS,CAAC,GAAD,EAAMP,IAAI,CAACG,EAAX,CAAf;AAAA,SATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAWI,oBAAC,IAAD;AAAM,QAAA,KAAK,oBAAOlB,KAAK,CAACoE,KAAb,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAXJ,CAVJ,EAwBI,oBAAC,IAAD;AACI,QAAA,KAAK,EAAE;AACH/B,UAAAA,KAAK,EAAE,EADJ;AAEHe,UAAAA,eAAe,EAAErD,MAAM,CAACkE,KAFrB;AAGHpB,UAAAA,UAAU,EAAE,QAHT;AAIHL,UAAAA,cAAc,EAAE;AAJb,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQM,oBAAC,IAAD;AAAM,QAAA,KAAK,oBAAOxC,KAAK,CAACqE,EAAb,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+BhD,gBAAgB,EAA/C,CARN,CAxBJ,EAmCI,oBAAC,gBAAD;AACI,QAAA,KAAK,EAAE;AACHgB,UAAAA,KAAK,EAAE,EADJ;AAEHe,UAAAA,eAAe,EAAErD,MAAM,CAACkE,KAFrB;AAGHpB,UAAAA,UAAU,EAAE,QAHT;AAIHL,UAAAA,cAAc,EAAE,QAJb;AAKH8B,UAAAA,oBAAoB,EAAE,EALnB;AAMHC,UAAAA,uBAAuB,EAAE;AANtB,SADX;AASI,QAAA,OAAO,EAAE;AAAA,iBAAMjD,SAAS,CAAC,GAAD,EAAMP,IAAI,CAACG,EAAX,CAAf;AAAA,SATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAWI,oBAAC,IAAD;AAAM,QAAA,KAAK,oBAAOlB,KAAK,CAACoE,KAAb,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAXJ,CAnCJ,CAbJ,CAJJ,EAqEI,oBAAC,IAAD;AACI,QAAA,KAAK,EAAE;AACH/B,UAAAA,KAAK,EAAEvC,KAAK,CAACuC,KADV;AAEHQ,UAAAA,UAAU,EAAE,QAFT;AAGH2B,UAAAA,SAAS,EAAE,EAHR;AAIH1B,UAAAA,iBAAiB,EAAEhD,KAAK,CAACyC,OAAN,GAAgB;AAJhC,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQI,oBAAC,IAAD;AAAM,QAAA,KAAK;AAAIkC,UAAAA,cAAc,EAAE,EAApB;AAAwBC,UAAAA,SAAS,EAAE;AAAnC,WAAgD1E,KAAK,CAACqE,EAAtD,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwEtD,IAAI,CAACwC,IAA7E,CARJ,EASI,oBAAC,IAAD;AAAM,QAAA,KAAK,oBAAOvD,KAAK,CAAC2E,KAAb,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkC5D,IAAI,CAAC6D,WAAvC,CATJ,CArEJ,EAkFI,oBAAC,IAAD;AACI,QAAA,KAAK,EAAE;AACHxC,UAAAA,aAAa,EAAE,KADZ;AAEHoC,UAAAA,SAAS,EAAE;AAFR,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMI,oBAAC,KAAD;AACI,QAAA,MAAM,EAAE5E,KAAK,CAACiF,IADlB;AAEI,QAAA,KAAK,EAAE;AACHxC,UAAAA,KAAK,EAAE,EADJ;AAEHM,UAAAA,MAAM,EAAE,EAFL;AAGHmC,UAAAA,WAAW,EAAE;AAHV,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,EAeI,oBAAC,IAAD;AAAM,QAAA,KAAK,kCACJ9E,KAAK,CAAC2E,KADF;AACSI,UAAAA,KAAK,EAAEhF,MAAM,CAACiF;AADvB,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEIjE,IAAI,CAACkE,QAFT,eAE4BlE,IAAI,CAACmE,OAFjC,SAE6CnE,IAAI,CAACoE,IAFlD,SAE2DpE,IAAI,CAACqE,KAFhE,CAfJ,CAlFJ,CADkB;AAAA,KAAtB,CAXR,CADJ;AAuHH;;AAED,SACI,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEC,MAAM,CAACC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKnD,YAAY,EADjB,EAEKuB,cAAc,EAFnB,CADJ;AAMH;;AAED,IAAM2B,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,SAAS,EAAE;AACX1C,IAAAA,IAAI,EAAE,CADK;AAEXQ,IAAAA,eAAe,EAAErD,MAAM,CAAC0F;AAFb;AADkB,CAAlB,CAAf;AAOA,eAAevF,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport {\n    View, \n    Text,\n    SafeAreaView,\n    StyleSheet,\n    TouchableOpacity,\n    Image,\n    Animated\n} from \"react-native\";\n\nimport { icons, images, SIZES, COLORS, FONTS } from '../constants';\nimport ShopServices from '../../services/ShopServices';\n\nfunction Company({ route, navigation }) {\n    \n        // const scrollX = new Animated.Value(0);\n        const [company, setCompany] = useState(null);\n        const [menu, setMenu] = useState(null);\n        const [orderQuantity, setOrderQuantity] = useState(0);\n        const [currentMenuId, setCurrentMenuId] = useState(null);\n        const [orderList, setOrderList] = useState([]);\n        \n        useEffect(() => {\n            let {item} = route.params;\n            setCompany(item)\n            ShopServices.getShopMenu(company?.id)\n            .then(items => setMenu(items))\n        }, [company])\n\n        useEffect(() => {\n            orderQuantity\n        }, [getOrderQuantity])\n        \n        // useEffect(() => {\n        //     ShopServices.getShopMenu(company?.id)\n        //         .then(items => setMenu(items))\n        // }, []);\n\n        function editOrder(action, itemId) {\n            \n            let orderList = orderItems.slice() // setOrderQuantity(item.quantity)\n            let item = orderList.filter(a => a.id == itemId)\n\n            if (action == \"+\") {\n                if (item.hasOwnProperty('quantity')) {\n                    let newQty = item[0].qty +1\n                    item[0].qty = newQty\n                    // item.quantity += 1\n                } else { item.quantity = 0}\n                setOrderQuantity(item.quantity)\n                // orderList.push(item)\n                // setCurrentMenuId(menuId)\n            } else {\n                if (orderQuantity > 0) {\n                    setOrderQuantity(item.quantity)\n                    if (item.hasOwnProperty('quantity')) {\n                        item.quantity -= 1\n                    }\n                    else { item.quantity = 0}\n                }\n            }\n            // console.log(orderQuantity)\n            // console.log(currentMenuId)\n        }\n\n        function getOrderQuantity() {\n            console.log('swiped');\n\n            \n\n            return 0;\n        }\n\n    function renderHeader() {\n        return (\n            <View style={{ flexDirection: 'row' }}>\n                <TouchableOpacity\n                    style={{\n                        width: 50,\n                        paddingLeft: SIZES.padding * 2,\n                        justifyContent: 'center'\n                    }}\n                    onPress={() => navigation.goBack()}\n                >\n                    <Image\n                        source={icons.back}\n                        resizeMode=\"contain\"\n                        style={{\n                            width: 30,\n                            height: 30\n                        }}\n                    />\n                </TouchableOpacity>\n\n                {/* Restaurant Name Section */}\n                <View\n                    style={{\n                        flex: 1,\n                        alignItems: 'center',\n                        justifyContent: 'center'\n                    }}\n                >\n                    <View\n                        style={{\n                            height: 50,\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            paddingHorizontal: SIZES.padding * 3,\n                            borderRadius: SIZES.radius,\n                            borderWidth: 1,\n                            borderColor: COLORS.lightGray1,\n                            backgroundColor: COLORS.lightGray3\n                        }}\n                    >\n                        <Text style={{ ...FONTS.h3 }}>{company?.name}</Text>\n                    </View>\n                </View>\n\n                <TouchableOpacity\n                    style={{\n                        width: 50,\n                        paddingRight: SIZES.padding * 2,\n                        justifyContent: 'center'\n                    }}\n                >\n                    <Image\n                        source={icons.list}\n                        resizeMode=\"contain\"\n                        style={{\n                            width: 30,\n                            height: 30\n                        }}\n                    />\n                </TouchableOpacity>\n            </View>\n        )\n    }\n\n    function renderFoodInfo() {\n        \n        return (\n            <Animated.ScrollView\n                horizontal\n                pagingEnabled\n                scrollEventThrottle={16}\n                snapToAlignment=\"center\"\n                showsHorizontalScrollIndicator={false}\n                // onScroll={Animated.event([\n                //     { nativeEvent: { contentOffset: { x: scrollX } } }\n                // ], { useNativeDriver: false })}\n            >\n                {\n                    menu?.setMealList.map((item, index) => (\n                        <View\n                            key={`menu-${index}`}\n                            style={{ alignItems: 'center' }}\n                        >\n                            <View style={{ height: SIZES.height * 0.35 }}>\n                                {/* Food Image */}\n                                <Image\n                                    source={item.imageUrl}\n                                    resizeMode=\"contain\"\n                                    style={{\n                                        width: SIZES.width,\n                                        height: \"100%\",\n                                        borderRadius:20\n                                    }}\n                                />\n\n                                {/* Quantity */}\n                                <View\n                                    style={{\n                                        position: 'absolute',\n                                        bottom: - 20,\n                                        width: SIZES.width,\n                                        height: 50,\n                                        justifyContent: 'center',\n                                        flexDirection: 'row'\n                                    }}\n                                >\n                                    <TouchableOpacity\n                                        style={{\n                                            width: 50,\n                                            backgroundColor: COLORS.white,\n                                            alignItems: 'center',\n                                            justifyContent: 'center',\n                                            borderTopLeftRadius: 25,\n                                            borderBottomLeftRadius: 25\n                                        }}\n                                        onPress={() => editOrder(\"-\", item.id)}\n                                    >\n                                        <Text style={{ ...FONTS.body1 }}> - </Text>\n                                    </TouchableOpacity>\n\n                                    <View\n                                        style={{\n                                            width: 50,\n                                            backgroundColor: COLORS.white,\n                                            alignItems: 'center',\n                                            justifyContent: 'center'\n                                        }}\n                                    >\n                                          <Text style={{ ...FONTS.h2 }}>{getOrderQuantity()}</Text>\n                                    </View>\n\n                                    <TouchableOpacity\n                                        style={{\n                                            width: 50,\n                                            backgroundColor: COLORS.white,\n                                            alignItems: 'center',\n                                            justifyContent: 'center',\n                                            borderTopRightRadius: 25,\n                                            borderBottomRightRadius: 25\n                                        }}\n                                        onPress={() => editOrder(\"+\", item.id)}\n                                    >\n                                        <Text style={{ ...FONTS.body1 }}> + </Text>\n                                    </TouchableOpacity>\n                                </View>\n                            </View>\n\n                            {/* Name & Description */}\n                            <View\n                                style={{\n                                    width: SIZES.width,\n                                    alignItems: 'center',\n                                    marginTop: 15,\n                                    paddingHorizontal: SIZES.padding * 2\n                                }}\n                            >\n                                <Text style={{ marginVertical: 10, textAlign: 'center', ...FONTS.h2 }}>{item.name}</Text>\n                                <Text style={{ ...FONTS.body3 }}>{item.description}</Text>\n                            </View>\n\n                            {/* Calories */}\n                            <View\n                                style={{\n                                    flexDirection: 'row',\n                                    marginTop: 10\n                                }}\n                            >\n                                <Image\n                                    source={icons.fire}\n                                    style={{\n                                        width: 20,\n                                        height: 20,\n                                        marginRight: 10\n                                    }}\n                                />\n\n                                <Text style={{\n                                    ...FONTS.body3, color: COLORS.darygray\n                                }}>{item.calories} cal - P:{item.protein} F:{item.fats} C:{item.carbs}</Text>\n                            </View>\n                        </View>\n                    ))\n                }\n            </Animated.ScrollView>\n        )\n    }\n\n    return (\n        <SafeAreaView style={styles.container}>\n            {renderHeader()}\n            {renderFoodInfo()}\n        </SafeAreaView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n    flex: 1,\n    backgroundColor: COLORS.lightGray2,\n    }\n})\n\nexport default Company;"]},"metadata":{},"sourceType":"module"}